/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define NUM  3
#define GAMING 4

/ {
    macros {
        mute_teamspeak: mute_teamspeak {
            wait-ms = <10>;
            label = "mute_discord";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp GRAVE &kp N1>,
                <&macro_wait_time 10>,
                <&macro_release>,
                <&kp GRAVE &kp N1>;
        };
        deafen_teamspeak: deafen_teamspeak {
            wait-ms = <10>;
            label = "deafen_discord";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp GRAVE &kp N2>,
                <&macro_wait_time 10>,
                <&macro_release>,
                <&kp GRAVE &kp N2>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_teamspeak_deafen {
            timeout-ms = <50>;
            key-positions = <0 2>;
            bindings = <&mute_teamspeak>;
        };

        combo_gaming_layer_switch {
            timeout-ms = <50>;
            key-positions = <0 3>;
            bindings = <&deafen_teamspeak>;
        };

        toggle_gaming {
            bindings = <&tog 4>;
            key-positions = <31 32>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
            //             | GUI | NAV | TAB  |   | SPC | SYM  | ALT |

            bindings = <
  &kp Q       &kp W        &kp E        &kp R        &kp T        &kp Y          &kp U        &kp I       &kp O               &kp P
  &kp A  &hm LALT S  &hm LCTRL D  &hm LSHFT F        &kp G        &kp H    &hm RSHFT J  &hm RCTRL K  &hm RALT L  &mt LWIN SEMICOLON
  &kp Z       &kp X        &kp C        &kp V        &kp B        &kp N          &kp M    &kp COMMA     &kp DOT            &kp FSLH
                         &kp ESC    &lt 3 TAB  &lt 1 SPACE  &lt 2 ENTER  &kp BACKSPACE   &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        nav_layer {
            // -----------------------------------------------------------------------------------------
            // |BTCLR |      | ESC  |  ~   |     |   | TAB  | HOME |  UP  | END   | DEL  |
            // | BSPC | PGDN | PGUP | CTRL | NUM |   | LEFT | DOWN |  UP  | RIGHT | BKSP |
            // | BT2  |      |      |      |     |   |  \   | ENT  |      |       |      |
            //               | GUI  |      |     |   |      |      |      |

            bindings = <
 &kp F1           &kp F2        &kp F3             &kp F4   &none   &none      &kp PG_UP  &kp UP_ARROW      &none  &kp HOME
 &kp F5  &mt LEFT_ALT F6  &mt LCTRL F7  &mt LEFT_SHIFT F8   &none   &none       &kp LEFT      &kp DOWN  &kp RIGHT     &none
 &kp F9          &kp F10       &kp F11            &kp F12   &none   &none  &kp PAGE_DOWN         &none      &none   &kp END
                                &trans             &trans  &trans  &trans         &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        sym_layer {
            // -----------------------------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
            // |     |     |     |  [  |  (  |   |  -  |  =  |  {  |  }  | "|" |
            // |     |     |     |  ]  |  )  |   |  _  |  +  |  [  |  ]  |  \  |
            //             | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
         &kp EXCL             &kp AT  &kp HASH  &kp DOLLAR      &kp PRCNT         &kp CARET   &kp AMPS   &kp STAR      &kp MINUS  &kp EQUAL
 &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LPAR    &kp RPAR      &kp GRAVE          &kp PIPE  &kp UNDER  &kp EQUAL        &kp DQT    &kp SQT
    &kp LESS_THAN   &kp GREATER_THAN  &kp LBRC    &kp RBRC  &kp LESS_THAN  &kp GREATER_THAN   &kp PLUS  &kp MINUS  &kp BACKSLASH  &kp SLASH
                                        &trans      &trans         &trans            &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        // This layer is unreachable until "tri layer state" is sorted out.
        // Leaving it here for completeness.

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
            // |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
            // |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
            //             |     |     |     |   |  0  |  .  |     |

            bindings = <
 &bt BT_CLR  &bt BT_NXT  &bt BT_PRV     &trans  &trans  &kp KP_MULTIPLY  &kp N7   &kp N8  &kp N9  &kp MINUS
      &none    &kp LALT   &kp LCTRL  &kp LSHFT  &trans    &kp KP_DIVIDE  &kp N4   &kp N5  &kp N6   &kp PLUS
      &none       &none       &none      &none  &trans           &trans  &kp N1   &kp N2  &kp N3  &kp EQUAL
                             &trans     &trans  &trans           &kp N0  &kp N0  &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        gaming_layer {
            // -----------------------------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
            // |     |     |     |  [  |  (  |   |  -  |  =  |  {  |  }  | "|" |
            // |     |     |     |  ]  |  )  |   |  _  |  +  |  [  |  ]  |  \  |
            //             | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
          &kp ESC  &kp N1       &kp N2      &kp N3     &kp N4  &kp CARET   &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR
        &hm H TAB   &kp Q        &kp W       &kp E      &kp R    &kp DQT  &kp UNDER  &kp EQUAL   &kp DQT   &kp SQT
 &mt LEFT_SHIFT Z   &kp A        &kp S       &kp D      &kp F    &kp SQT   &kp PLUS  &kp MINUS  &kp PIPE    &trans
                           &mt LCTRL G  &mt LALT C  &kp SPACE     &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
